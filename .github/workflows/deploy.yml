name: Deploy to GCE on PR Merge
on:
  push:
    branches: [ production-demo ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.GCE_SSH_KEY }}
          
      # ----- GOOGLE CLOUD AUTHENTICATION -----
      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.ARTIFACT_REGISTRY_WRITER_CREDENTIALS }}' > /tmp/gcloud-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcloud-key.json
          echo "GCP_PROJECT=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "y" | gcloud auth configure-docker
          
      # ----- FRONTEND -----
      - name: Build React App Docker Image
        working-directory: spotify-analyzer
        run: |
          docker build --build-arg REACT_APP_ENV=production -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

          
      - name: Deploy Frontend to VM
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          ssh -o StrictHostKeyChecking=no cole_hodler@35.246.70.11 '
            docker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest &&
            docker ps -a | grep -q react-app && docker stop react-app && docker rm react-app;
            docker run -d --name react-app -p 3000:80 gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest
          '          
      # ----- BACKEND -----
      - name: Build Spring Boot App Docker Image
        working-directory: backend
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
          
      - name: Deploy Backend to VM
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          ssh -o StrictHostKeyChecking=no cole_hodler@35.246.70.11 \
            "docker pull gcr.io/${GCP_PROJECT}/backend:latest && \
             docker ps -a | grep -q spring-app && docker stop spring-app && docker rm spring-app; \
             docker run -d --name spring-app \
               -p 8080:8080 \
               -e SPOTIFY_REDIRECT_URI=http://35.246.70.11/callback \
               -e CORS_ALLOWED_ORIGINS=http://35.246.70.11 \
               -e BACKEND_URL=http://35.246.70.11 \
               gcr.io/${GCP_PROJECT}/backend:latest"

            # ----- PYTHON MICROSERVICE -----
      - name: Build Python Microservice Docker Image
        working-directory: py-microservice
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-microservice:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-microservice:latest
          
      - name: Deploy Python Microservice to VM
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          ssh -o StrictHostKeyChecking=no cole_hodler@35.246.70.11 '
            docker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-microservice:latest &&
            docker ps -a | grep -q python-app && docker stop python-app && docker rm python-app;
            docker run -d --name python-app -p 5000:5000 --restart unless-stopped gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-microservice:latest
          '
